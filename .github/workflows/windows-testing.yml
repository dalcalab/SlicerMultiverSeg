name: Testing
run-name: ${{ github.event.pull_request.number && format('Pull request {0}', github.event.pull_request.number) || format('Commit {0}', github.sha) }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  Running-Tests:
    timeout-minutes: 30
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: ./.github/actions/install-slicer
        id: slicer_install
        name: Install Slicer
      - name: Install PyTorch module
        uses: ./.github/actions/slicer-run-python-script
        with:
          script: './.github/python_scripts/install_pytorch_module.py'
          slicer_exe: ${{ steps.slicer_install.outputs.slicer_executable }}
          additional_arguments: --no-main-window --no-splash
      - name: Install Python dependencies
        uses: ./.github/actions/slicer-run-python-script
        with:
          script: './.github/python_scripts/install_python_dependencies.py'
          slicer_exe: ${{ steps.slicer_install.outputs.slicer_executable }}
          additional_arguments: --no-main-window --no-splash
      - name: Run tests
        uses: ./.github/actions/slicer-run-python-tests
        with:
          slicer_exe: ${{ steps.slicer_install.outputs.slicer_executable }}
          additional_arguments: --testing --no-splash
          tests_root_path: './MultiverSeg/Testing/Python'
          tests_name_pattern: '*TestCase.py'
          module_paths: './MultiverSeg'


